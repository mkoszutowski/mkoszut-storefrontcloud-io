variables:
  REGISTRY_URL: "registry.storefrontcloud.io"
  REGISTRY_IMAGE: "registry.storefrontcloud.io/mkoszut-storefrontcloud-io/vue-storefront"

stages:
  - build
  - deploy
  - deploy-check

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$REGISTRY_URL\":{\"username\":\"$REGISTRY_USER\",\"password\":\"$REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/dev/docker/Dockerfile --destination $REGISTRY_IMAGE:${CI_COMMIT_SHA:0:8}
  only:
    - develop
    - master

deploy-to-staging:
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl
    - >
      curl -H "Content-Type: application/json" -X POST -d "{\"code\":\"mkoszut-test\", \"frontContainerVersion\":\"${CI_COMMIT_SHA:0:8}\"}" http://10.29.1.1:4000/instances
  environment:
    name: staging
    url: https://mkoszut-test.storefrontcloud.io/
  only:
    - develop

deploy-to-prod:
  stage: deploy
  image: alpine
  script:
    - apk add --no-cache curl
    - >
      curl -H "Content-Type: application/json" -X POST -d "{\"code\":\"mkoszut\", \"frontContainerVersion\":\"${CI_COMMIT_SHA:0:8}\"}" http://10.29.1.1:4000/instances
  environment:
    name: staging
    url: https:///
  only:
    - master

deploy-to-prod-check:
  stage: deploy-check
  image: 
    name: divante/storefront-cloud-deploy-checker
    entrypoint: ["/bin/bash"]
  script:
    - pwd
    - cd /usr/src/app
    - >
      bundle exec ruby deploy_checker.rb --tag ${CI_COMMIT_SHA:0:8} --kubeconfig $KUBE_CONFIG -n $INSTANCE_NAMESPACE
  only:
    - master